/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { MirrorworldApi } from "@fern-api/mirrorworld";
import * as core from "../../../../../core";

export const Request: core.schemas.Schema<
  serializers.marketplaces.mint.mintCollection.Request.Raw,
  MirrorworldApi.marketplaces.MintCollectionReq
> = core.schemas.object({
  name: core.schemas.string(),
  symbol: core.schemas.string(),
  url: core.schemas.string(),
  confirmation: core.schemas.lazy(async () => (await import("../../../..")).marketplaces.Confirmation),
  sellerFeeBasisPoints: core.schemas.property("seller_fee_basis_points", core.schemas.number()),
});

export declare namespace Request {
  interface Raw {
    name: string;
    symbol: string;
    url: string;
    confirmation: serializers.marketplaces.Confirmation.Raw;
    seller_fee_basis_points: number;
  }
}

export const Response: core.schemas.Schema<
  serializers.marketplaces.mint.mintCollection.Response.Raw,
  MirrorworldApi.marketplaces.MintResponse
> = core.schemas.lazyObject(async () => (await import("../../../..")).marketplaces.MintResponse);

export declare namespace Response {
  type Raw = serializers.marketplaces.MintResponse.Raw;
}
