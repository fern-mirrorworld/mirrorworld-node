/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { MirrorworldApi } from "@fern-api/mirrorworld";
import * as core from "../../../../../core";

export const Request: core.schemas.Schema<
  serializers.authentication.transactionApproval.bindPaymentCode.Request.Raw,
  MirrorworldApi.authentication.BindPaymentCodeRequest
> = core.schemas.object({
  securityCode: core.schemas.property("security_code", core.schemas.string()),
  confirmSecurityCode: core.schemas.property("confirm_security_code", core.schemas.string()),
});

export declare namespace Request {
  interface Raw {
    security_code: string;
    confirm_security_code: string;
  }
}

export const Response: core.schemas.Schema<
  serializers.authentication.transactionApproval.bindPaymentCode.Response.Raw,
  MirrorworldApi.authentication.BindPaymentCodeResponse
> = core.schemas.lazyObject(async () => (await import("../../../..")).authentication.BindPaymentCodeResponse);

export declare namespace Response {
  type Raw = serializers.authentication.BindPaymentCodeResponse.Raw;
}
